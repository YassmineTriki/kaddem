pipeline {
    agent any
    tools {
        jdk 'JDK-17'      // Nom de votre JDK configuré dans Jenkins
        maven 'Maven-3.9'
    }
      environment {
            // Active le profil 'test' uniquement pour les étapes de test
            TEST_PROFILE = '-Dspring.profiles.active=test'
        }
    stages {
        // Étape 1 : Récupération du code
        stage('Checkout Git') {
            steps {
                git branch: 'master', url: 'https://github.com/YassmineTriki/kaddem.git'
            }
        }
        /* Étape 2 - Build */
        stage('Build') {
              steps {
                  sh 'ls -l mvnw'
                  sh './mvnw clean compile -DskipTests'
              }
        }
        /* Étape 3 - Tests Unitaires (nouveau) */
         stage('Unit Tests') {
                    steps {
                         sh """
                         ./mvnw test $TEST_PROFILE \
                         -Dspring.datasource.url=jdbc:h2:mem:testdb \
                         -Dspring.jpa.hibernate.ddl-auto=create-drop
                         """
                    }
                    post {
                        always {
                            junit '**/target/surefire-reports/*.xml'  // Publie les rapports JUnit
                              archiveArtifacts artifacts: '**/target/surefire-reports/*.txt', allowEmptyArchive: true
                        }
                    }
         }
          /* Étape 4 - Packaging final */
          stage('Package') {
                steps {
                       sh './mvnw package -DskipTests'
                }
          }
          // Étape 4: Analyse SonarQube
          stage('SonarQube Analysis') {
                   steps {
                         withSonarQubeEnv('SonarQube-Server') {
                             sh 'mvn sonar:sonar -Dsonar.projectKey=kaddem'
                         }

                     }
          }
          // Étape 5: Nexus
          stage('Deploy to Nexus') {
              steps {
                   nexusArtifactUploader artifacts: [[artifactId: 'BACKEND', classifier: '', file: 'target/backend-2.7.5', type: '.war']], credentialsId: 'nexus', groupId: 'org.springframework.boot', nexusUrl: 'localhost:8081/', nexusVersion: 'nexus3', protocol: 'http', repository: 'maven-releases', version: '2.7.5'
                  /*withCredentials([
                      usernamePassword(
                          credentialsId: 'nexus-credentials', // ID saisi dans Jenkins
                          usernameVariable: 'NEXUS_USER',
                          passwordVariable: 'NEXUS_PASS'
                      )
                  ]) {
                      sh '''
                          mvn deploy \
                          -DaltDeploymentRepository=nexus::default::http://localhost:8081/repository/maven-releases/ \
                          -DrepositoryId=nexus \
                          -Dusername=$NEXUS_USER \
                          -Dpassword=$NEXUS_PASS
                      '''
                  }*/
              }
          }
    }


}